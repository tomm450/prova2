function [done] = PPywriter(TO_BE_OPEN,TO_BE_LOAD,TO_BE_SAVE)

fid = fopen(TO_BE_OPEN,'w+');

fprintf(fid,'#### import the simple module from the paraview \r');  
fprintf(fid,'from paraview.simple import * \r');  
fprintf(fid,'#### disable automatic camera reset on ''Show'' \r');  
fprintf(fid,'paraview.simple._DisableFirstRenderCameraReset() \r');  
fprintf(fid,' \r');  
fprintf(fid,'# create a new ''OpenFOAMReader'' \r');  
fprintf(fid,'a5foam = OpenFOAMReader(FileName=''%s'') \r',TO_BE_LOAD);  
fprintf(fid,'a5foam.SkipZeroTime = 1 \r');  
fprintf(fid,'a5foam.CaseType = ''Reconstructed Case'' \r');  
fprintf(fid,'a5foam.LabelSize = ''32-bit'' \r');  
fprintf(fid,'a5foam.ScalarSize = ''64-bit (DP)'' \r');  
fprintf(fid,'a5foam.Createcelltopointfiltereddata = 1 \r');  
fprintf(fid,'a5foam.Adddimensionalunitstoarraynames = 0 \r');  
fprintf(fid,'a5foam.MeshRegions = [''internalMesh''] \r');  
fprintf(fid,'a5foam.CellArrays = [''U'', ''k'', ''nut'', ''omega'', ''p''] \r');  
fprintf(fid,'a5foam.PointArrays = [] \r');  
fprintf(fid,'a5foam.LagrangianArrays = [] \r');  
fprintf(fid,'a5foam.Cachemesh = 1 \r');  
fprintf(fid,'a5foam.Decomposepolyhedra = 1 \r');  
fprintf(fid,'a5foam.ListtimestepsaccordingtocontrolDict = 0 \r');  
fprintf(fid,'a5foam.Lagrangianpositionswithoutextradata = 1 \r');  
fprintf(fid,'a5foam.Readzones = 0 \r');  
fprintf(fid,' \r');  
fprintf(fid,'# get animation scene \r');  
fprintf(fid,'animationScene1 = GetAnimationScene() \r');  
fprintf(fid,' \r');  
fprintf(fid,'# update animation scene based on data timesteps \r');  
fprintf(fid,'animationScene1.UpdateAnimationUsingDataTimeSteps() \r');  
fprintf(fid,' \r');  
fprintf(fid,'# Properties modified on a5foam \r');  
fprintf(fid,'a5foam.MeshRegions = [''airfoil''] \r');  
fprintf(fid,' \r');  
fprintf(fid,'# get active view \r');  
fprintf(fid,'renderView1 = GetActiveViewOrCreate(''RenderView'') \r');  
fprintf(fid,'# uncomment following to set a specific view size \r');  
fprintf(fid,'# renderView1.ViewSize = [887, 548] \r');  
fprintf(fid,' \r');  
fprintf(fid,'# get color transfer function/color map for ''p'' \r');  
fprintf(fid,'pLUT = GetColorTransferFunction(''p'') \r');  
fprintf(fid,'pLUT.LockDataRange = 0 \r');  
fprintf(fid,'pLUT.InterpretValuesAsCategories = 0 \r');  
fprintf(fid,'pLUT.ShowCategoricalColorsinDataRangeOnly = 0 \r');  
fprintf(fid,'pLUT.RescaleOnVisibilityChange = 0 \r');  
fprintf(fid,'pLUT.EnableOpacityMapping = 0 \r');  
fprintf(fid,'pLUT.RGBPoints = [-49100.94921875, 0.231373, 0.298039, 0.752941, -20495.27197265625, 0.865003, 0.865003, 0.865003, 8110.4052734375, 0.705882, 0.0156863, 0.14902] \r');  
fprintf(fid,'pLUT.UseLogScale = 0 \r');  
fprintf(fid,'pLUT.ColorSpace = ''Diverging'' \r');  
fprintf(fid,'pLUT.UseBelowRangeColor = 0 \r');  
fprintf(fid,'pLUT.BelowRangeColor = [0.0, 0.0, 0.0] \r');  
fprintf(fid,'pLUT.UseAboveRangeColor = 0 \r');  
fprintf(fid,'pLUT.AboveRangeColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'pLUT.NanColor = [1.0, 1.0, 0.0] \r');  
fprintf(fid,'pLUT.Discretize = 1 \r');  
fprintf(fid,'pLUT.NumberOfTableValues = 256 \r');  
fprintf(fid,'pLUT.ScalarRangeInitialized = 1.0 \r');  
fprintf(fid,'pLUT.HSVWrap = 0 \r');  
fprintf(fid,'pLUT.VectorComponent = 0 \r');  
fprintf(fid,'pLUT.VectorMode = ''Magnitude'' \r');  
fprintf(fid,'pLUT.AllowDuplicateScalars = 1 \r');  
fprintf(fid,'pLUT.Annotations = [] \r');  
fprintf(fid,'pLUT.ActiveAnnotatedValues = [] \r');  
fprintf(fid,'pLUT.IndexedColors = [] \r');  
fprintf(fid,' \r');  
fprintf(fid,'# show data in view \r');  
fprintf(fid,'a5foamDisplay = Show(a5foam, renderView1) \r');  
fprintf(fid,'# trace defaults for the display properties. \r');  
fprintf(fid,'a5foamDisplay.Representation = ''Surface'' \r');  
fprintf(fid,'a5foamDisplay.AmbientColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'a5foamDisplay.ColorArrayName = [''POINTS'', ''p''] \r');  
fprintf(fid,'a5foamDisplay.DiffuseColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'a5foamDisplay.LookupTable = pLUT \r');  
fprintf(fid,'a5foamDisplay.MapScalars = 1 \r');  
fprintf(fid,'a5foamDisplay.InterpolateScalarsBeforeMapping = 1 \r');  
fprintf(fid,'a5foamDisplay.Opacity = 1.0 \r');  
fprintf(fid,'a5foamDisplay.PointSize = 2.0 \r');  
fprintf(fid,'a5foamDisplay.LineWidth = 1.0 \r');  
fprintf(fid,'a5foamDisplay.Interpolation = ''Gouraud'' \r');  
fprintf(fid,'a5foamDisplay.Specular = 0.0 \r');  
fprintf(fid,'a5foamDisplay.SpecularColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'a5foamDisplay.SpecularPower = 100.0 \r');  
fprintf(fid,'a5foamDisplay.Ambient = 0.0 \r');  
fprintf(fid,'a5foamDisplay.Diffuse = 1.0 \r');  
fprintf(fid,'a5foamDisplay.EdgeColor = [0.0, 0.0, 0.5] \r');  
fprintf(fid,'a5foamDisplay.BackfaceRepresentation = ''Follow Frontface'' \r');  
fprintf(fid,'a5foamDisplay.BackfaceAmbientColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'a5foamDisplay.BackfaceDiffuseColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'a5foamDisplay.BackfaceOpacity = 1.0 \r');  
fprintf(fid,'a5foamDisplay.Position = [0.0, 0.0, 0.0] \r');  
fprintf(fid,'a5foamDisplay.Scale = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'a5foamDisplay.Orientation = [0.0, 0.0, 0.0] \r');  
fprintf(fid,'a5foamDisplay.Origin = [0.0, 0.0, 0.0] \r');  
fprintf(fid,'a5foamDisplay.Pickable = 1 \r');  
fprintf(fid,'a5foamDisplay.Texture = None \r');  
fprintf(fid,'a5foamDisplay.Triangulate = 0 \r');  
fprintf(fid,'a5foamDisplay.NonlinearSubdivisionLevel = 1 \r');  
fprintf(fid,'a5foamDisplay.UseDataPartitions = 0 \r');  
fprintf(fid,'a5foamDisplay.OSPRayUseScaleArray = 0 \r');  
fprintf(fid,'a5foamDisplay.OSPRayScaleArray = ''p'' \r');  
fprintf(fid,'a5foamDisplay.OSPRayScaleFunction = ''PiecewiseFunction'' \r');  
fprintf(fid,'a5foamDisplay.Orient = 0 \r');  
fprintf(fid,'a5foamDisplay.OrientationMode = ''Direction'' \r');  
fprintf(fid,'a5foamDisplay.SelectOrientationVectors = ''U'' \r');  
fprintf(fid,'a5foamDisplay.Scaling = 0 \r');  
fprintf(fid,'a5foamDisplay.ScaleMode = ''No Data Scaling Off'' \r');  
fprintf(fid,'a5foamDisplay.ScaleFactor = 0.12460310012102127 \r');  
fprintf(fid,'a5foamDisplay.SelectScaleArray = ''p'' \r');  
fprintf(fid,'a5foamDisplay.GlyphType = ''Arrow'' \r');  
fprintf(fid,'a5foamDisplay.UseGlyphTable = 0 \r');  
fprintf(fid,'a5foamDisplay.GlyphTableIndexArray = ''p'' \r');  
fprintf(fid,'a5foamDisplay.UseCompositeGlyphTable = 0 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid = ''GridAxesRepresentation'' \r');  
fprintf(fid,'a5foamDisplay.SelectionCellLabelBold = 0 \r');  
fprintf(fid,'a5foamDisplay.SelectionCellLabelColor = [0.0, 1.0, 0.0] \r');  
fprintf(fid,'a5foamDisplay.SelectionCellLabelFontFamily = ''Arial'' \r');  
fprintf(fid,'a5foamDisplay.SelectionCellLabelFontSize = 18 \r');  
fprintf(fid,'a5foamDisplay.SelectionCellLabelItalic = 0 \r');  
fprintf(fid,'a5foamDisplay.SelectionCellLabelJustification = ''Left'' \r');  
fprintf(fid,'a5foamDisplay.SelectionCellLabelOpacity = 1.0 \r');  
fprintf(fid,'a5foamDisplay.SelectionCellLabelShadow = 0 \r');  
fprintf(fid,'a5foamDisplay.SelectionPointLabelBold = 0 \r');  
fprintf(fid,'a5foamDisplay.SelectionPointLabelColor = [1.0, 1.0, 0.0] \r');  
fprintf(fid,'a5foamDisplay.SelectionPointLabelFontFamily = ''Arial'' \r');  
fprintf(fid,'a5foamDisplay.SelectionPointLabelFontSize = 18 \r');  
fprintf(fid,'a5foamDisplay.SelectionPointLabelItalic = 0 \r');  
fprintf(fid,'a5foamDisplay.SelectionPointLabelJustification = ''Left'' \r');  
fprintf(fid,'a5foamDisplay.SelectionPointLabelOpacity = 1.0 \r');  
fprintf(fid,'a5foamDisplay.SelectionPointLabelShadow = 0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes = ''PolarAxesRepresentation'' \r');  
fprintf(fid,' \r');  
fprintf(fid,'# init the ''PiecewiseFunction'' selected for ''OSPRayScaleFunction'' \r');  
fprintf(fid,'a5foamDisplay.OSPRayScaleFunction.Points = [0.0, 0.0, 0.5, 0.0, 1.0, 1.0, 0.5, 0.0] \r');  
fprintf(fid,' \r');  
fprintf(fid,'# init the ''Arrow'' selected for ''GlyphType'' \r');  
fprintf(fid,'a5foamDisplay.GlyphType.TipResolution = 6 \r');  
fprintf(fid,'a5foamDisplay.GlyphType.TipRadius = 0.1 \r');  
fprintf(fid,'a5foamDisplay.GlyphType.TipLength = 0.35 \r');  
fprintf(fid,'a5foamDisplay.GlyphType.ShaftResolution = 6 \r');  
fprintf(fid,'a5foamDisplay.GlyphType.ShaftRadius = 0.03 \r');  
fprintf(fid,'a5foamDisplay.GlyphType.Invert = 0 \r');  
fprintf(fid,' \r');  
fprintf(fid,'# init the ''GridAxesRepresentation'' selected for ''DataAxesGrid'' \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.XTitle = ''X Axis'' \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.YTitle = ''Y Axis'' \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.ZTitle = ''Z Axis'' \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.XTitleColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.XTitleFontFamily = ''Arial'' \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.XTitleBold = 0 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.XTitleItalic = 0 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.XTitleFontSize = 12 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.XTitleShadow = 0 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.XTitleOpacity = 1.0 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.YTitleColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.YTitleFontFamily = ''Arial'' \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.YTitleBold = 0 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.YTitleItalic = 0 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.YTitleFontSize = 12 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.YTitleShadow = 0 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.YTitleOpacity = 1.0 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.ZTitleColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.ZTitleFontFamily = ''Arial'' \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.ZTitleBold = 0 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.ZTitleItalic = 0 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.ZTitleFontSize = 12 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.ZTitleShadow = 0 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.ZTitleOpacity = 1.0 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.FacesToRender = 63 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.CullBackface = 0 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.CullFrontface = 1 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.GridColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.ShowGrid = 0 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.ShowEdges = 1 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.ShowTicks = 1 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.LabelUniqueEdgesOnly = 1 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.AxesToLabel = 63 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.XLabelColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.XLabelFontFamily = ''Arial'' \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.XLabelBold = 0 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.XLabelItalic = 0 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.XLabelFontSize = 12 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.XLabelShadow = 0 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.XLabelOpacity = 1.0 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.YLabelColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.YLabelFontFamily = ''Arial'' \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.YLabelBold = 0 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.YLabelItalic = 0 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.YLabelFontSize = 12 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.YLabelShadow = 0 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.YLabelOpacity = 1.0 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.ZLabelColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.ZLabelFontFamily = ''Arial'' \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.ZLabelBold = 0 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.ZLabelItalic = 0 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.ZLabelFontSize = 12 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.ZLabelShadow = 0 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.ZLabelOpacity = 1.0 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.XAxisNotation = ''Mixed'' \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.XAxisPrecision = 2 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.XAxisUseCustomLabels = 0 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.XAxisLabels = [] \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.YAxisNotation = ''Mixed'' \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.YAxisPrecision = 2 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.YAxisUseCustomLabels = 0 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.YAxisLabels = [] \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.ZAxisNotation = ''Mixed'' \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.ZAxisPrecision = 2 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.ZAxisUseCustomLabels = 0 \r');  
fprintf(fid,'a5foamDisplay.DataAxesGrid.ZAxisLabels = [] \r');  
fprintf(fid,' \r');  
fprintf(fid,'# init the ''PolarAxesRepresentation'' selected for ''PolarAxes'' \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.Visibility = 0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.Translation = [0.0, 0.0, 0.0] \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.Scale = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.Orientation = [0.0, 0.0, 0.0] \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.EnableCustomBounds = [0, 0, 0] \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.CustomBounds = [0.0, 1.0, 0.0, 1.0, 0.0, 1.0] \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.EnableCustomRange = 0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.CustomRange = [0.0, 1.0] \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.PolarAxisVisibility = 1 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.RadialAxesVisibility = 1 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.DrawRadialGridlines = 1 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.PolarArcsVisibility = 1 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.DrawPolarArcsGridlines = 1 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.NumberOfRadialAxes = 0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.AutoSubdividePolarAxis = 1 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.NumberOfPolarAxis = 0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.MinimumRadius = 0.0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.MinimumAngle = 0.0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.MaximumAngle = 90.0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.RadialAxesOriginToPolarAxis = 1 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.Ratio = 1.0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.PolarAxisColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.PolarArcsColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.LastRadialAxisColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.SecondaryPolarArcsColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.SecondaryRadialAxesColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.PolarAxisTitleVisibility = 1 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.PolarAxisTitle = ''Radial Distance'' \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.PolarAxisTitleLocation = ''Bottom'' \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.PolarLabelVisibility = 1 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.PolarLabelFormat = ''%%-#6.3g'' \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.PolarLabelExponentLocation = ''Labels'' \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.RadialLabelVisibility = 1 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.RadialLabelFormat = ''%%-#3.1f'' \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.RadialLabelLocation = ''Bottom'' \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.RadialUnitsVisibility = 1 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.ScreenSize = 10.0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.PolarAxisTitleColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.PolarAxisTitleOpacity = 1.0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.PolarAxisTitleFontFamily = ''Arial'' \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.PolarAxisTitleBold = 0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.PolarAxisTitleItalic = 0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.PolarAxisTitleShadow = 0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.PolarAxisTitleFontSize = 12 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.PolarAxisLabelColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.PolarAxisLabelOpacity = 1.0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.PolarAxisLabelFontFamily = ''Arial'' \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.PolarAxisLabelBold = 0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.PolarAxisLabelItalic = 0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.PolarAxisLabelShadow = 0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.PolarAxisLabelFontSize = 12 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.LastRadialAxisTextColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.LastRadialAxisTextOpacity = 1.0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.LastRadialAxisTextFontFamily = ''Arial'' \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.LastRadialAxisTextBold = 0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.LastRadialAxisTextItalic = 0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.LastRadialAxisTextShadow = 0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.LastRadialAxisTextFontSize = 12 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.SecondaryRadialAxesTextColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.SecondaryRadialAxesTextOpacity = 1.0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.SecondaryRadialAxesTextFontFamily = ''Arial'' \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.SecondaryRadialAxesTextBold = 0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.SecondaryRadialAxesTextItalic = 0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.SecondaryRadialAxesTextShadow = 0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.SecondaryRadialAxesTextFontSize = 12 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.EnableDistanceLOD = 1 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.DistanceLODThreshold = 0.7 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.EnableViewAngleLOD = 1 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.ViewAngleLODThreshold = 0.7 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.SmallestVisiblePolarAngle = 0.5 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.PolarTicksVisibility = 1 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.ArcTicksOriginToPolarAxis = 1 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.TickLocation = ''Both'' \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.AxisTickVisibility = 1 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.AxisMinorTickVisibility = 0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.ArcTickVisibility = 1 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.ArcMinorTickVisibility = 0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.DeltaAngleMajor = 10.0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.DeltaAngleMinor = 5.0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.PolarAxisMajorTickSize = 0.0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.PolarAxisTickRatioSize = 0.3 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.PolarAxisMajorTickThickness = 1.0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.PolarAxisTickRatioThickness = 0.5 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.LastRadialAxisMajorTickSize = 0.0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.LastRadialAxisTickRatioSize = 0.3 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.LastRadialAxisMajorTickThickness = 1.0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.LastRadialAxisTickRatioThickness = 0.5 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.ArcMajorTickSize = 0.0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.ArcTickRatioSize = 0.3 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.ArcMajorTickThickness = 1.0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.ArcTickRatioThickness = 0.5 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.Use2DMode = 0 \r');  
fprintf(fid,'a5foamDisplay.PolarAxes.UseLogAxis = 0 \r');  
fprintf(fid,' \r');  
fprintf(fid,'# reset view to fit data \r');  
fprintf(fid,'renderView1.ResetCamera() \r');  
fprintf(fid,' \r');  
fprintf(fid,'# show color bar/color legend \r');  
fprintf(fid,'a5foamDisplay.SetScalarBarVisibility(renderView1, True) \r');  
fprintf(fid,' \r');  
fprintf(fid,'# update the view to ensure updated data information \r');  
fprintf(fid,'renderView1.Update() \r');  
fprintf(fid,' \r');  
fprintf(fid,'animationScene1.GoToNext() \r');  
fprintf(fid,' \r');  
fprintf(fid,'animationScene1.GoToLast() \r');  
fprintf(fid,' \r');  
fprintf(fid,'# create a new ''Slice'' \r');  
fprintf(fid,'slice1 = Slice(Input=a5foam) \r');  
fprintf(fid,'slice1.SliceType = ''Plane'' \r');  
fprintf(fid,'slice1.Crinkleslice = 0 \r');  
fprintf(fid,'slice1.Triangulatetheslice = 1 \r');  
fprintf(fid,'slice1.SliceOffsetValues = [0.0] \r');  
fprintf(fid,' \r');  
fprintf(fid,'# init the ''Plane'' selected for ''SliceType'' \r');  
fprintf(fid,'slice1.SliceType.Origin = [0.37698449939489365, -0.02500000037252903, -0.03879009559750557] \r');  
fprintf(fid,'slice1.SliceType.Normal = [1.0, 0.0, 0.0] \r');  
fprintf(fid,'slice1.SliceType.Offset = 0.0 \r');  
fprintf(fid,' \r');  
fprintf(fid,'# Properties modified on slice1.SliceType \r');  
fprintf(fid,'slice1.SliceType.Origin = [0.0, -0.01, 0.0] \r');  
fprintf(fid,'slice1.SliceType.Normal = [0.0, 1.0, 0.0] \r');  
fprintf(fid,' \r');  
fprintf(fid,'# Properties modified on slice1.SliceType \r');  
fprintf(fid,'slice1.SliceType.Origin = [0.0, -0.01, 0.0] \r');  
fprintf(fid,'slice1.SliceType.Normal = [0.0, 1.0, 0.0] \r');  
fprintf(fid,' \r');  
fprintf(fid,'# show data in view \r');  
fprintf(fid,'slice1Display = Show(slice1, renderView1) \r');  
fprintf(fid,'# trace defaults for the display properties. \r');  
fprintf(fid,'slice1Display.Representation = ''Surface'' \r');  
fprintf(fid,'slice1Display.AmbientColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'slice1Display.ColorArrayName = [''POINTS'', ''p''] \r');  
fprintf(fid,'slice1Display.DiffuseColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'slice1Display.LookupTable = pLUT \r');  
fprintf(fid,'slice1Display.MapScalars = 1 \r');  
fprintf(fid,'slice1Display.InterpolateScalarsBeforeMapping = 1 \r');  
fprintf(fid,'slice1Display.Opacity = 1.0 \r');  
fprintf(fid,'slice1Display.PointSize = 2.0 \r');  
fprintf(fid,'slice1Display.LineWidth = 1.0 \r');  
fprintf(fid,'slice1Display.Interpolation = ''Gouraud'' \r');  
fprintf(fid,'slice1Display.Specular = 0.0 \r');  
fprintf(fid,'slice1Display.SpecularColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'slice1Display.SpecularPower = 100.0 \r');  
fprintf(fid,'slice1Display.Ambient = 0.0 \r');  
fprintf(fid,'slice1Display.Diffuse = 1.0 \r');  
fprintf(fid,'slice1Display.EdgeColor = [0.0, 0.0, 0.5] \r');  
fprintf(fid,'slice1Display.BackfaceRepresentation = ''Follow Frontface'' \r');  
fprintf(fid,'slice1Display.BackfaceAmbientColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'slice1Display.BackfaceDiffuseColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'slice1Display.BackfaceOpacity = 1.0 \r');  
fprintf(fid,'slice1Display.Position = [0.0, 0.0, 0.0] \r');  
fprintf(fid,'slice1Display.Scale = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'slice1Display.Orientation = [0.0, 0.0, 0.0] \r');  
fprintf(fid,'slice1Display.Origin = [0.0, 0.0, 0.0] \r');  
fprintf(fid,'slice1Display.Pickable = 1 \r');  
fprintf(fid,'slice1Display.Texture = None \r');  
fprintf(fid,'slice1Display.Triangulate = 0 \r');  
fprintf(fid,'slice1Display.NonlinearSubdivisionLevel = 1 \r');  
fprintf(fid,'slice1Display.UseDataPartitions = 0 \r');  
fprintf(fid,'slice1Display.OSPRayUseScaleArray = 0 \r');  
fprintf(fid,'slice1Display.OSPRayScaleArray = ''p'' \r');  
fprintf(fid,'slice1Display.OSPRayScaleFunction = ''PiecewiseFunction'' \r');  
fprintf(fid,'slice1Display.Orient = 0 \r');  
fprintf(fid,'slice1Display.OrientationMode = ''Direction'' \r');  
fprintf(fid,'slice1Display.SelectOrientationVectors = ''U'' \r');  
fprintf(fid,'slice1Display.Scaling = 0 \r');  
fprintf(fid,'slice1Display.ScaleMode = ''No Data Scaling Off'' \r');  
fprintf(fid,'slice1Display.ScaleFactor = 0.12460310012102127 \r');  
fprintf(fid,'slice1Display.SelectScaleArray = ''p'' \r');  
fprintf(fid,'slice1Display.GlyphType = ''Arrow'' \r');  
fprintf(fid,'slice1Display.UseGlyphTable = 0 \r');  
fprintf(fid,'slice1Display.GlyphTableIndexArray = ''p'' \r');  
fprintf(fid,'slice1Display.UseCompositeGlyphTable = 0 \r');  
fprintf(fid,'slice1Display.DataAxesGrid = ''GridAxesRepresentation'' \r');  
fprintf(fid,'slice1Display.SelectionCellLabelBold = 0 \r');  
fprintf(fid,'slice1Display.SelectionCellLabelColor = [0.0, 1.0, 0.0] \r');  
fprintf(fid,'slice1Display.SelectionCellLabelFontFamily = ''Arial'' \r');  
fprintf(fid,'slice1Display.SelectionCellLabelFontSize = 18 \r');  
fprintf(fid,'slice1Display.SelectionCellLabelItalic = 0 \r');  
fprintf(fid,'slice1Display.SelectionCellLabelJustification = ''Left'' \r');  
fprintf(fid,'slice1Display.SelectionCellLabelOpacity = 1.0 \r');  
fprintf(fid,'slice1Display.SelectionCellLabelShadow = 0 \r');  
fprintf(fid,'slice1Display.SelectionPointLabelBold = 0 \r');  
fprintf(fid,'slice1Display.SelectionPointLabelColor = [1.0, 1.0, 0.0] \r');  
fprintf(fid,'slice1Display.SelectionPointLabelFontFamily = ''Arial'' \r');  
fprintf(fid,'slice1Display.SelectionPointLabelFontSize = 18 \r');  
fprintf(fid,'slice1Display.SelectionPointLabelItalic = 0 \r');  
fprintf(fid,'slice1Display.SelectionPointLabelJustification = ''Left'' \r');  
fprintf(fid,'slice1Display.SelectionPointLabelOpacity = 1.0 \r');  
fprintf(fid,'slice1Display.SelectionPointLabelShadow = 0 \r');  
fprintf(fid,'slice1Display.PolarAxes = ''PolarAxesRepresentation'' \r');  
fprintf(fid,' \r');  
fprintf(fid,'# init the ''PiecewiseFunction'' selected for ''OSPRayScaleFunction'' \r');  
fprintf(fid,'slice1Display.OSPRayScaleFunction.Points = [0.0, 0.0, 0.5, 0.0, 1.0, 1.0, 0.5, 0.0] \r');  
fprintf(fid,' \r');  
fprintf(fid,'# init the ''Arrow'' selected for ''GlyphType'' \r');  
fprintf(fid,'slice1Display.GlyphType.TipResolution = 6 \r');  
fprintf(fid,'slice1Display.GlyphType.TipRadius = 0.1 \r');  
fprintf(fid,'slice1Display.GlyphType.TipLength = 0.35 \r');  
fprintf(fid,'slice1Display.GlyphType.ShaftResolution = 6 \r');  
fprintf(fid,'slice1Display.GlyphType.ShaftRadius = 0.03 \r');  
fprintf(fid,'slice1Display.GlyphType.Invert = 0 \r');  
fprintf(fid,' \r');  
fprintf(fid,'# init the ''GridAxesRepresentation'' selected for ''DataAxesGrid'' \r');  
fprintf(fid,'slice1Display.DataAxesGrid.XTitle = ''X Axis'' \r');  
fprintf(fid,'slice1Display.DataAxesGrid.YTitle = ''Y Axis'' \r');  
fprintf(fid,'slice1Display.DataAxesGrid.ZTitle = ''Z Axis'' \r');  
fprintf(fid,'slice1Display.DataAxesGrid.XTitleColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'slice1Display.DataAxesGrid.XTitleFontFamily = ''Arial'' \r');  
fprintf(fid,'slice1Display.DataAxesGrid.XTitleBold = 0 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.XTitleItalic = 0 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.XTitleFontSize = 12 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.XTitleShadow = 0 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.XTitleOpacity = 1.0 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.YTitleColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'slice1Display.DataAxesGrid.YTitleFontFamily = ''Arial'' \r');  
fprintf(fid,'slice1Display.DataAxesGrid.YTitleBold = 0 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.YTitleItalic = 0 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.YTitleFontSize = 12 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.YTitleShadow = 0 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.YTitleOpacity = 1.0 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.ZTitleColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'slice1Display.DataAxesGrid.ZTitleFontFamily = ''Arial'' \r');  
fprintf(fid,'slice1Display.DataAxesGrid.ZTitleBold = 0 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.ZTitleItalic = 0 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.ZTitleFontSize = 12 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.ZTitleShadow = 0 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.ZTitleOpacity = 1.0 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.FacesToRender = 63 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.CullBackface = 0 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.CullFrontface = 1 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.GridColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'slice1Display.DataAxesGrid.ShowGrid = 0 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.ShowEdges = 1 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.ShowTicks = 1 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.LabelUniqueEdgesOnly = 1 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.AxesToLabel = 63 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.XLabelColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'slice1Display.DataAxesGrid.XLabelFontFamily = ''Arial'' \r');  
fprintf(fid,'slice1Display.DataAxesGrid.XLabelBold = 0 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.XLabelItalic = 0 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.XLabelFontSize = 12 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.XLabelShadow = 0 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.XLabelOpacity = 1.0 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.YLabelColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'slice1Display.DataAxesGrid.YLabelFontFamily = ''Arial'' \r');  
fprintf(fid,'slice1Display.DataAxesGrid.YLabelBold = 0 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.YLabelItalic = 0 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.YLabelFontSize = 12 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.YLabelShadow = 0 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.YLabelOpacity = 1.0 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.ZLabelColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'slice1Display.DataAxesGrid.ZLabelFontFamily = ''Arial'' \r');  
fprintf(fid,'slice1Display.DataAxesGrid.ZLabelBold = 0 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.ZLabelItalic = 0 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.ZLabelFontSize = 12 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.ZLabelShadow = 0 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.ZLabelOpacity = 1.0 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.XAxisNotation = ''Mixed'' \r');  
fprintf(fid,'slice1Display.DataAxesGrid.XAxisPrecision = 2 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.XAxisUseCustomLabels = 0 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.XAxisLabels = [] \r');  
fprintf(fid,'slice1Display.DataAxesGrid.YAxisNotation = ''Mixed'' \r');  
fprintf(fid,'slice1Display.DataAxesGrid.YAxisPrecision = 2 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.YAxisUseCustomLabels = 0 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.YAxisLabels = [] \r');  
fprintf(fid,'slice1Display.DataAxesGrid.ZAxisNotation = ''Mixed'' \r');  
fprintf(fid,'slice1Display.DataAxesGrid.ZAxisPrecision = 2 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.ZAxisUseCustomLabels = 0 \r');  
fprintf(fid,'slice1Display.DataAxesGrid.ZAxisLabels = [] \r');  
fprintf(fid,' \r');  
fprintf(fid,'# init the ''PolarAxesRepresentation'' selected for ''PolarAxes'' \r');  
fprintf(fid,'slice1Display.PolarAxes.Visibility = 0 \r');  
fprintf(fid,'slice1Display.PolarAxes.Translation = [0.0, 0.0, 0.0] \r');  
fprintf(fid,'slice1Display.PolarAxes.Scale = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'slice1Display.PolarAxes.Orientation = [0.0, 0.0, 0.0] \r');  
fprintf(fid,'slice1Display.PolarAxes.EnableCustomBounds = [0, 0, 0] \r');  
fprintf(fid,'slice1Display.PolarAxes.CustomBounds = [0.0, 1.0, 0.0, 1.0, 0.0, 1.0] \r');  
fprintf(fid,'slice1Display.PolarAxes.EnableCustomRange = 0 \r');  
fprintf(fid,'slice1Display.PolarAxes.CustomRange = [0.0, 1.0] \r');  
fprintf(fid,'slice1Display.PolarAxes.PolarAxisVisibility = 1 \r');  
fprintf(fid,'slice1Display.PolarAxes.RadialAxesVisibility = 1 \r');  
fprintf(fid,'slice1Display.PolarAxes.DrawRadialGridlines = 1 \r');  
fprintf(fid,'slice1Display.PolarAxes.PolarArcsVisibility = 1 \r');  
fprintf(fid,'slice1Display.PolarAxes.DrawPolarArcsGridlines = 1 \r');  
fprintf(fid,'slice1Display.PolarAxes.NumberOfRadialAxes = 0 \r');  
fprintf(fid,'slice1Display.PolarAxes.AutoSubdividePolarAxis = 1 \r');  
fprintf(fid,'slice1Display.PolarAxes.NumberOfPolarAxis = 0 \r');  
fprintf(fid,'slice1Display.PolarAxes.MinimumRadius = 0.0 \r');  
fprintf(fid,'slice1Display.PolarAxes.MinimumAngle = 0.0 \r');  
fprintf(fid,'slice1Display.PolarAxes.MaximumAngle = 90.0 \r');  
fprintf(fid,'slice1Display.PolarAxes.RadialAxesOriginToPolarAxis = 1 \r');  
fprintf(fid,'slice1Display.PolarAxes.Ratio = 1.0 \r');  
fprintf(fid,'slice1Display.PolarAxes.PolarAxisColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'slice1Display.PolarAxes.PolarArcsColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'slice1Display.PolarAxes.LastRadialAxisColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'slice1Display.PolarAxes.SecondaryPolarArcsColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'slice1Display.PolarAxes.SecondaryRadialAxesColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'slice1Display.PolarAxes.PolarAxisTitleVisibility = 1 \r');  
fprintf(fid,'slice1Display.PolarAxes.PolarAxisTitle = ''Radial Distance'' \r');  
fprintf(fid,'slice1Display.PolarAxes.PolarAxisTitleLocation = ''Bottom'' \r');  
fprintf(fid,'slice1Display.PolarAxes.PolarLabelVisibility = 1 \r');  
fprintf(fid,'slice1Display.PolarAxes.PolarLabelFormat = ''%%-#6.3g'' \r');  
fprintf(fid,'slice1Display.PolarAxes.PolarLabelExponentLocation = ''Labels'' \r');  
fprintf(fid,'slice1Display.PolarAxes.RadialLabelVisibility = 1 \r');  
fprintf(fid,'slice1Display.PolarAxes.RadialLabelFormat = ''%%-#3.1f'' \r');  
fprintf(fid,'slice1Display.PolarAxes.RadialLabelLocation = ''Bottom'' \r');  
fprintf(fid,'slice1Display.PolarAxes.RadialUnitsVisibility = 1 \r');  
fprintf(fid,'slice1Display.PolarAxes.ScreenSize = 10.0 \r');  
fprintf(fid,'slice1Display.PolarAxes.PolarAxisTitleColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'slice1Display.PolarAxes.PolarAxisTitleOpacity = 1.0 \r');  
fprintf(fid,'slice1Display.PolarAxes.PolarAxisTitleFontFamily = ''Arial'' \r');  
fprintf(fid,'slice1Display.PolarAxes.PolarAxisTitleBold = 0 \r');  
fprintf(fid,'slice1Display.PolarAxes.PolarAxisTitleItalic = 0 \r');  
fprintf(fid,'slice1Display.PolarAxes.PolarAxisTitleShadow = 0 \r');  
fprintf(fid,'slice1Display.PolarAxes.PolarAxisTitleFontSize = 12 \r');  
fprintf(fid,'slice1Display.PolarAxes.PolarAxisLabelColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'slice1Display.PolarAxes.PolarAxisLabelOpacity = 1.0 \r');  
fprintf(fid,'slice1Display.PolarAxes.PolarAxisLabelFontFamily = ''Arial'' \r');  
fprintf(fid,'slice1Display.PolarAxes.PolarAxisLabelBold = 0 \r');  
fprintf(fid,'slice1Display.PolarAxes.PolarAxisLabelItalic = 0 \r');  
fprintf(fid,'slice1Display.PolarAxes.PolarAxisLabelShadow = 0 \r');  
fprintf(fid,'slice1Display.PolarAxes.PolarAxisLabelFontSize = 12 \r');  
fprintf(fid,'slice1Display.PolarAxes.LastRadialAxisTextColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'slice1Display.PolarAxes.LastRadialAxisTextOpacity = 1.0 \r');  
fprintf(fid,'slice1Display.PolarAxes.LastRadialAxisTextFontFamily = ''Arial'' \r');  
fprintf(fid,'slice1Display.PolarAxes.LastRadialAxisTextBold = 0 \r');  
fprintf(fid,'slice1Display.PolarAxes.LastRadialAxisTextItalic = 0 \r');  
fprintf(fid,'slice1Display.PolarAxes.LastRadialAxisTextShadow = 0 \r');  
fprintf(fid,'slice1Display.PolarAxes.LastRadialAxisTextFontSize = 12 \r');  
fprintf(fid,'slice1Display.PolarAxes.SecondaryRadialAxesTextColor = [1.0, 1.0, 1.0] \r');  
fprintf(fid,'slice1Display.PolarAxes.SecondaryRadialAxesTextOpacity = 1.0 \r');  
fprintf(fid,'slice1Display.PolarAxes.SecondaryRadialAxesTextFontFamily = ''Arial'' \r');  
fprintf(fid,'slice1Display.PolarAxes.SecondaryRadialAxesTextBold = 0 \r');  
fprintf(fid,'slice1Display.PolarAxes.SecondaryRadialAxesTextItalic = 0 \r');  
fprintf(fid,'slice1Display.PolarAxes.SecondaryRadialAxesTextShadow = 0 \r');  
fprintf(fid,'slice1Display.PolarAxes.SecondaryRadialAxesTextFontSize = 12 \r');  
fprintf(fid,'slice1Display.PolarAxes.EnableDistanceLOD = 1 \r');  
fprintf(fid,'slice1Display.PolarAxes.DistanceLODThreshold = 0.7 \r');  
fprintf(fid,'slice1Display.PolarAxes.EnableViewAngleLOD = 1 \r');  
fprintf(fid,'slice1Display.PolarAxes.ViewAngleLODThreshold = 0.7 \r');  
fprintf(fid,'slice1Display.PolarAxes.SmallestVisiblePolarAngle = 0.5 \r');  
fprintf(fid,'slice1Display.PolarAxes.PolarTicksVisibility = 1 \r');  
fprintf(fid,'slice1Display.PolarAxes.ArcTicksOriginToPolarAxis = 1 \r');  
fprintf(fid,'slice1Display.PolarAxes.TickLocation = ''Both'' \r');  
fprintf(fid,'slice1Display.PolarAxes.AxisTickVisibility = 1 \r');  
fprintf(fid,'slice1Display.PolarAxes.AxisMinorTickVisibility = 0 \r');  
fprintf(fid,'slice1Display.PolarAxes.ArcTickVisibility = 1 \r');  
fprintf(fid,'slice1Display.PolarAxes.ArcMinorTickVisibility = 0 \r');  
fprintf(fid,'slice1Display.PolarAxes.DeltaAngleMajor = 10.0 \r');  
fprintf(fid,'slice1Display.PolarAxes.DeltaAngleMinor = 5.0 \r');  
fprintf(fid,'slice1Display.PolarAxes.PolarAxisMajorTickSize = 0.0 \r');  
fprintf(fid,'slice1Display.PolarAxes.PolarAxisTickRatioSize = 0.3 \r');  
fprintf(fid,'slice1Display.PolarAxes.PolarAxisMajorTickThickness = 1.0 \r');  
fprintf(fid,'slice1Display.PolarAxes.PolarAxisTickRatioThickness = 0.5 \r');  
fprintf(fid,'slice1Display.PolarAxes.LastRadialAxisMajorTickSize = 0.0 \r');  
fprintf(fid,'slice1Display.PolarAxes.LastRadialAxisTickRatioSize = 0.3 \r');  
fprintf(fid,'slice1Display.PolarAxes.LastRadialAxisMajorTickThickness = 1.0 \r');  
fprintf(fid,'slice1Display.PolarAxes.LastRadialAxisTickRatioThickness = 0.5 \r');  
fprintf(fid,'slice1Display.PolarAxes.ArcMajorTickSize = 0.0 \r');  
fprintf(fid,'slice1Display.PolarAxes.ArcTickRatioSize = 0.3 \r');  
fprintf(fid,'slice1Display.PolarAxes.ArcMajorTickThickness = 1.0 \r');  
fprintf(fid,'slice1Display.PolarAxes.ArcTickRatioThickness = 0.5 \r');  
fprintf(fid,'slice1Display.PolarAxes.Use2DMode = 0 \r');  
fprintf(fid,'slice1Display.PolarAxes.UseLogAxis = 0 \r');  
fprintf(fid,' \r');  
fprintf(fid,'# hide data in view \r');  
fprintf(fid,'Hide(a5foam, renderView1) \r');  
fprintf(fid,' \r');  
fprintf(fid,'# show color bar/color legend \r');  
fprintf(fid,'slice1Display.SetScalarBarVisibility(renderView1, True) \r');  
fprintf(fid,' \r');  
fprintf(fid,'# update the view to ensure updated data information \r');  
fprintf(fid,'renderView1.Update() \r');  
fprintf(fid,' \r');  
fprintf(fid,'# reset view to fit data \r');  
fprintf(fid,'renderView1.ResetCamera() \r');  
fprintf(fid,' \r');  
fprintf(fid,'# create a new ''Plot Data'' \r');  
fprintf(fid,'plotData1 = PlotData(Input=slice1) \r');  
fprintf(fid,' \r');  
fprintf(fid,'# Create a new ''Line Chart View'' \r');  
fprintf(fid,'lineChartView1 = CreateView(''XYChartView'') \r');  
fprintf(fid,'lineChartView1.UseCache = 0 \r');  
fprintf(fid,'lineChartView1.ViewSize = [439, 548] \r');  
fprintf(fid,'lineChartView1.ChartTitle = '''' \r');  
fprintf(fid,'lineChartView1.ChartTitleAlignment = ''Center'' \r');  
fprintf(fid,'lineChartView1.ChartTitleFontFamily = ''Arial'' \r');  
fprintf(fid,'lineChartView1.ChartTitleFontSize = 14 \r');  
fprintf(fid,'lineChartView1.ChartTitleBold = 0 \r');  
fprintf(fid,'lineChartView1.ChartTitleItalic = 0 \r');  
fprintf(fid,'lineChartView1.ChartTitleColor = [0.0, 0.0, 0.0] \r');  
fprintf(fid,'lineChartView1.ShowLegend = 1 \r');  
fprintf(fid,'lineChartView1.LegendLocation = ''TopRight'' \r');  
fprintf(fid,'lineChartView1.SortByXAxis = 0 \r');  
fprintf(fid,'lineChartView1.LegendPosition = [0, 0] \r');  
fprintf(fid,'lineChartView1.LegendFontFamily = ''Arial'' \r');  
fprintf(fid,'lineChartView1.LegendFontSize = 12 \r');  
fprintf(fid,'lineChartView1.LegendBold = 0 \r');  
fprintf(fid,'lineChartView1.LegendItalic = 0 \r');  
fprintf(fid,'lineChartView1.TooltipNotation = ''Mixed'' \r');  
fprintf(fid,'lineChartView1.TooltipPrecision = 6 \r');  
fprintf(fid,'lineChartView1.UseOffscreenRendering = 0 \r');  
fprintf(fid,'lineChartView1.HideTimeMarker = 0 \r');  
fprintf(fid,'lineChartView1.LeftAxisTitle = '''' \r');  
fprintf(fid,'lineChartView1.ShowLeftAxisGrid = 1 \r');  
fprintf(fid,'lineChartView1.LeftAxisGridColor = [0.95, 0.95, 0.95] \r');  
fprintf(fid,'lineChartView1.LeftAxisColor = [0.0, 0.0, 0.0] \r');  
fprintf(fid,'lineChartView1.LeftAxisTitleFontFamily = ''Arial'' \r');  
fprintf(fid,'lineChartView1.LeftAxisTitleFontSize = 12 \r');  
fprintf(fid,'lineChartView1.LeftAxisTitleBold = 1 \r');  
fprintf(fid,'lineChartView1.LeftAxisTitleItalic = 0 \r');  
fprintf(fid,'lineChartView1.LeftAxisTitleColor = [0.0, 0.0, 0.0] \r');  
fprintf(fid,'lineChartView1.LeftAxisLogScale = 0 \r');  
fprintf(fid,'lineChartView1.LeftAxisUseCustomRange = 0 \r');  
fprintf(fid,'lineChartView1.LeftAxisRangeMinimum = 0.0 \r');  
fprintf(fid,'lineChartView1.LeftAxisRangeMaximum = 1.0 \r');  
fprintf(fid,'lineChartView1.ShowLeftAxisLabels = 1 \r');  
fprintf(fid,'lineChartView1.LeftAxisLabelNotation = ''Mixed'' \r');  
fprintf(fid,'lineChartView1.LeftAxisLabelPrecision = 2 \r');  
fprintf(fid,'lineChartView1.LeftAxisUseCustomLabels = 0 \r');  
fprintf(fid,'lineChartView1.LeftAxisLabels = [] \r');  
fprintf(fid,'lineChartView1.LeftAxisLabelFontFamily = ''Arial'' \r');  
fprintf(fid,'lineChartView1.LeftAxisLabelFontSize = 12 \r');  
fprintf(fid,'lineChartView1.LeftAxisLabelBold = 0 \r');  
fprintf(fid,'lineChartView1.LeftAxisLabelItalic = 0 \r');  
fprintf(fid,'lineChartView1.LeftAxisLabelColor = [0.0, 0.0, 0.0] \r');  
fprintf(fid,'lineChartView1.BottomAxisTitle = '''' \r');  
fprintf(fid,'lineChartView1.ShowBottomAxisGrid = 1 \r');  
fprintf(fid,'lineChartView1.BottomAxisGridColor = [0.95, 0.95, 0.95] \r');  
fprintf(fid,'lineChartView1.BottomAxisColor = [0.0, 0.0, 0.0] \r');  
fprintf(fid,'lineChartView1.BottomAxisTitleFontFamily = ''Arial'' \r');  
fprintf(fid,'lineChartView1.BottomAxisTitleFontSize = 12 \r');  
fprintf(fid,'lineChartView1.BottomAxisTitleBold = 1 \r');  
fprintf(fid,'lineChartView1.BottomAxisTitleItalic = 0 \r');  
fprintf(fid,'lineChartView1.BottomAxisTitleColor = [0.0, 0.0, 0.0] \r');  
fprintf(fid,'lineChartView1.BottomAxisLogScale = 0 \r');  
fprintf(fid,'lineChartView1.BottomAxisUseCustomRange = 0 \r');  
fprintf(fid,'lineChartView1.BottomAxisRangeMinimum = 0.0 \r');  
fprintf(fid,'lineChartView1.BottomAxisRangeMaximum = 1.0 \r');  
fprintf(fid,'lineChartView1.ShowBottomAxisLabels = 1 \r');  
fprintf(fid,'lineChartView1.BottomAxisLabelNotation = ''Mixed'' \r');  
fprintf(fid,'lineChartView1.BottomAxisLabelPrecision = 2 \r');  
fprintf(fid,'lineChartView1.BottomAxisUseCustomLabels = 0 \r');  
fprintf(fid,'lineChartView1.BottomAxisLabels = [] \r');  
fprintf(fid,'lineChartView1.BottomAxisLabelFontFamily = ''Arial'' \r');  
fprintf(fid,'lineChartView1.BottomAxisLabelFontSize = 12 \r');  
fprintf(fid,'lineChartView1.BottomAxisLabelBold = 0 \r');  
fprintf(fid,'lineChartView1.BottomAxisLabelItalic = 0 \r');  
fprintf(fid,'lineChartView1.BottomAxisLabelColor = [0.0, 0.0, 0.0] \r');  
fprintf(fid,'lineChartView1.RightAxisTitle = '''' \r');  
fprintf(fid,'lineChartView1.ShowRightAxisGrid = 1 \r');  
fprintf(fid,'lineChartView1.RightAxisGridColor = [0.95, 0.95, 0.95] \r');  
fprintf(fid,'lineChartView1.RightAxisColor = [0.0, 0.0, 0.0] \r');  
fprintf(fid,'lineChartView1.RightAxisTitleFontFamily = ''Arial'' \r');  
fprintf(fid,'lineChartView1.RightAxisTitleFontSize = 12 \r');  
fprintf(fid,'lineChartView1.RightAxisTitleBold = 1 \r');  
fprintf(fid,'lineChartView1.RightAxisTitleItalic = 0 \r');  
fprintf(fid,'lineChartView1.RightAxisTitleColor = [0.0, 0.0, 0.0] \r');  
fprintf(fid,'lineChartView1.RightAxisLogScale = 0 \r');  
fprintf(fid,'lineChartView1.RightAxisUseCustomRange = 0 \r');  
fprintf(fid,'lineChartView1.RightAxisRangeMinimum = 0.0 \r');  
fprintf(fid,'lineChartView1.RightAxisRangeMaximum = 1.0 \r');  
fprintf(fid,'lineChartView1.ShowRightAxisLabels = 1 \r');  
fprintf(fid,'lineChartView1.RightAxisLabelNotation = ''Mixed'' \r');  
fprintf(fid,'lineChartView1.RightAxisLabelPrecision = 2 \r');  
fprintf(fid,'lineChartView1.RightAxisUseCustomLabels = 0 \r');  
fprintf(fid,'lineChartView1.RightAxisLabels = [] \r');  
fprintf(fid,'lineChartView1.RightAxisLabelFontFamily = ''Arial'' \r');  
fprintf(fid,'lineChartView1.RightAxisLabelFontSize = 12 \r');  
fprintf(fid,'lineChartView1.RightAxisLabelBold = 0 \r');  
fprintf(fid,'lineChartView1.RightAxisLabelItalic = 0 \r');  
fprintf(fid,'lineChartView1.RightAxisLabelColor = [0.0, 0.0, 0.0] \r');  
fprintf(fid,'lineChartView1.TopAxisTitle = '''' \r');  
fprintf(fid,'lineChartView1.ShowTopAxisGrid = 1 \r');  
fprintf(fid,'lineChartView1.TopAxisGridColor = [0.95, 0.95, 0.95] \r');  
fprintf(fid,'lineChartView1.TopAxisColor = [0.0, 0.0, 0.0] \r');  
fprintf(fid,'lineChartView1.TopAxisTitleFontFamily = ''Arial'' \r');  
fprintf(fid,'lineChartView1.TopAxisTitleFontSize = 12 \r');  
fprintf(fid,'lineChartView1.TopAxisTitleBold = 1 \r');  
fprintf(fid,'lineChartView1.TopAxisTitleItalic = 0 \r');  
fprintf(fid,'lineChartView1.TopAxisTitleColor = [0.0, 0.0, 0.0] \r');  
fprintf(fid,'lineChartView1.TopAxisLogScale = 0 \r');  
fprintf(fid,'lineChartView1.TopAxisUseCustomRange = 0 \r');  
fprintf(fid,'lineChartView1.TopAxisRangeMinimum = 0.0 \r');  
fprintf(fid,'lineChartView1.TopAxisRangeMaximum = 1.0 \r');  
fprintf(fid,'lineChartView1.ShowTopAxisLabels = 1 \r');  
fprintf(fid,'lineChartView1.TopAxisLabelNotation = ''Mixed'' \r');  
fprintf(fid,'lineChartView1.TopAxisLabelPrecision = 2 \r');  
fprintf(fid,'lineChartView1.TopAxisUseCustomLabels = 0 \r');  
fprintf(fid,'lineChartView1.TopAxisLabels = [] \r');  
fprintf(fid,'lineChartView1.TopAxisLabelFontFamily = ''Arial'' \r');  
fprintf(fid,'lineChartView1.TopAxisLabelFontSize = 12 \r');  
fprintf(fid,'lineChartView1.TopAxisLabelBold = 0 \r');  
fprintf(fid,'lineChartView1.TopAxisLabelItalic = 0 \r');  
fprintf(fid,'lineChartView1.TopAxisLabelColor = [0.0, 0.0, 0.0] \r');  
fprintf(fid,' \r');  
fprintf(fid,'# get layout \r');  
fprintf(fid,'layout1 = GetLayout() \r');  
fprintf(fid,' \r');  
fprintf(fid,'# place view in the layout \r');  
fprintf(fid,'layout1.AssignView(2, lineChartView1) \r');  
fprintf(fid,' \r');  
fprintf(fid,'# show data in view \r');  
fprintf(fid,'plotData1Display = Show(plotData1, lineChartView1) \r');  
fprintf(fid,'# trace defaults for the display properties. \r');  
fprintf(fid,'plotData1Display.CompositeDataSetIndex = [2] \r');  
fprintf(fid,'plotData1Display.AttributeType = ''Point Data'' \r');  
fprintf(fid,'plotData1Display.UseIndexForXAxis = 1 \r');  
fprintf(fid,'plotData1Display.XArrayName = ''k'' \r');  
fprintf(fid,'plotData1Display.SeriesVisibility = [''k (Patches)'', ''nut (Patches)'', ''omega (Patches)'', ''p (Patches)'', ''U_Magnitude (Patches)'', ''k (airfoil)'', ''nut (airfoil)'', ''omega (airfoil)'', ''p (airfoil)'', ''U_Magnitude (airfoil)''] \r');  
fprintf(fid,'plotData1Display.SeriesLabel = [''k (Patches)'', ''k (Patches)'', ''nut (Patches)'', ''nut (Patches)'', ''omega (Patches)'', ''omega (Patches)'', ''p (Patches)'', ''p (Patches)'', ''U_X (Patches)'', ''U_X (Patches)'', ''U_Y (Patches)'', ''U_Y (Patches)'', ''U_Z (Patches)'', ''U_Z (Patches)'', ''U_Magnitude (Patches)'', ''U_Magnitude (Patches)'', ''Points_X (Patches)'', ''Points_X (Patches)'', ''Points_Y (Patches)'', ''Points_Y (Patches)'', ''Points_Z (Patches)'', ''Points_Z (Patches)'', ''Points_Magnitude (Patches)'', ''Points_Magnitude (Patches)'', ''k (airfoil)'', ''k (airfoil)'', ''nut (airfoil)'', ''nut (airfoil)'', ''omega (airfoil)'', ''omega (airfoil)'', ''p (airfoil)'', ''p (airfoil)'', ''U_X (airfoil)'', ''U_X (airfoil)'', ''U_Y (airfoil)'', ''U_Y (airfoil)'', ''U_Z (airfoil)'', ''U_Z (airfoil)'', ''U_Magnitude (airfoil)'', ''U_Magnitude (airfoil)'', ''Points_X (airfoil)'', ''Points_X (airfoil)'', ''Points_Y (airfoil)'', ''Points_Y (airfoil)'', ''Points_Z (airfoil)'', ''Points_Z (airfoil)'', ''Points_Magnitude (airfoil)'', ''Points_Magnitude (airfoil)''] \r');  
fprintf(fid,'plotData1Display.SeriesColor = [''k (Patches)'', ''0'', ''0'', ''0'', ''nut (Patches)'', ''0.89'', ''0.1'', ''0.11'', ''omega (Patches)'', ''0.22'', ''0.49'', ''0.72'', ''p (Patches)'', ''0.3'', ''0.69'', ''0.29'', ''U_X (Patches)'', ''0.6'', ''0.31'', ''0.64'', ''U_Y (Patches)'', ''1'', ''0.5'', ''0'', ''U_Z (Patches)'', ''0.65'', ''0.34'', ''0.16'', ''U_Magnitude (Patches)'', ''0'', ''0'', ''0'', ''Points_X (Patches)'', ''0.89'', ''0.1'', ''0.11'', ''Points_Y (Patches)'', ''0.22'', ''0.49'', ''0.72'', ''Points_Z (Patches)'', ''0.3'', ''0.69'', ''0.29'', ''Points_Magnitude (Patches)'', ''0.6'', ''0.31'', ''0.64'', ''k (airfoil)'', ''1'', ''0.5'', ''0'', ''nut (airfoil)'', ''0.65'', ''0.34'', ''0.16'', ''omega (airfoil)'', ''0'', ''0'', ''0'', ''p (airfoil)'', ''0.89'', ''0.1'', ''0.11'', ''U_X (airfoil)'', ''0.22'', ''0.49'', ''0.72'', ''U_Y (airfoil)'', ''0.3'', ''0.69'', ''0.29'', ''U_Z (airfoil)'', ''0.6'', ''0.31'', ''0.64'', ''U_Magnitude (airfoil)'', ''1'', ''0.5'', ''0'', ''Points_X (airfoil)'', ''0.65'', ''0.34'', ''0.16'', ''Points_Y (airfoil)'', ''0'', ''0'', ''0'', ''Points_Z (airfoil)'', ''0.89'', ''0.1'', ''0.11'', ''Points_Magnitude (airfoil)'', ''0.22'', ''0.49'', ''0.72''] \r');  
fprintf(fid,'plotData1Display.SeriesPlotCorner = [''k (Patches)'', ''0'', ''nut (Patches)'', ''0'', ''omega (Patches)'', ''0'', ''p (Patches)'', ''0'', ''U_X (Patches)'', ''0'', ''U_Y (Patches)'', ''0'', ''U_Z (Patches)'', ''0'', ''U_Magnitude (Patches)'', ''0'', ''Points_X (Patches)'', ''0'', ''Points_Y (Patches)'', ''0'', ''Points_Z (Patches)'', ''0'', ''Points_Magnitude (Patches)'', ''0'', ''k (airfoil)'', ''0'', ''nut (airfoil)'', ''0'', ''omega (airfoil)'', ''0'', ''p (airfoil)'', ''0'', ''U_X (airfoil)'', ''0'', ''U_Y (airfoil)'', ''0'', ''U_Z (airfoil)'', ''0'', ''U_Magnitude (airfoil)'', ''0'', ''Points_X (airfoil)'', ''0'', ''Points_Y (airfoil)'', ''0'', ''Points_Z (airfoil)'', ''0'', ''Points_Magnitude (airfoil)'', ''0''] \r');  
fprintf(fid,'plotData1Display.SeriesLabelPrefix = '''' \r');  
fprintf(fid,'plotData1Display.SeriesLineStyle = [''k (Patches)'', ''1'', ''nut (Patches)'', ''1'', ''omega (Patches)'', ''1'', ''p (Patches)'', ''1'', ''U_X (Patches)'', ''1'', ''U_Y (Patches)'', ''1'', ''U_Z (Patches)'', ''1'', ''U_Magnitude (Patches)'', ''1'', ''Points_X (Patches)'', ''1'', ''Points_Y (Patches)'', ''1'', ''Points_Z (Patches)'', ''1'', ''Points_Magnitude (Patches)'', ''1'', ''k (airfoil)'', ''1'', ''nut (airfoil)'', ''1'', ''omega (airfoil)'', ''1'', ''p (airfoil)'', ''1'', ''U_X (airfoil)'', ''1'', ''U_Y (airfoil)'', ''1'', ''U_Z (airfoil)'', ''1'', ''U_Magnitude (airfoil)'', ''1'', ''Points_X (airfoil)'', ''1'', ''Points_Y (airfoil)'', ''1'', ''Points_Z (airfoil)'', ''1'', ''Points_Magnitude (airfoil)'', ''1''] \r');  
fprintf(fid,'plotData1Display.SeriesLineThickness = [''k (Patches)'', ''2'', ''nut (Patches)'', ''2'', ''omega (Patches)'', ''2'', ''p (Patches)'', ''2'', ''U_X (Patches)'', ''2'', ''U_Y (Patches)'', ''2'', ''U_Z (Patches)'', ''2'', ''U_Magnitude (Patches)'', ''2'', ''Points_X (Patches)'', ''2'', ''Points_Y (Patches)'', ''2'', ''Points_Z (Patches)'', ''2'', ''Points_Magnitude (Patches)'', ''2'', ''k (airfoil)'', ''2'', ''nut (airfoil)'', ''2'', ''omega (airfoil)'', ''2'', ''p (airfoil)'', ''2'', ''U_X (airfoil)'', ''2'', ''U_Y (airfoil)'', ''2'', ''U_Z (airfoil)'', ''2'', ''U_Magnitude (airfoil)'', ''2'', ''Points_X (airfoil)'', ''2'', ''Points_Y (airfoil)'', ''2'', ''Points_Z (airfoil)'', ''2'', ''Points_Magnitude (airfoil)'', ''2''] \r');  
fprintf(fid,'plotData1Display.SeriesMarkerStyle = [''k (Patches)'', ''0'', ''nut (Patches)'', ''0'', ''omega (Patches)'', ''0'', ''p (Patches)'', ''0'', ''U_X (Patches)'', ''0'', ''U_Y (Patches)'', ''0'', ''U_Z (Patches)'', ''0'', ''U_Magnitude (Patches)'', ''0'', ''Points_X (Patches)'', ''0'', ''Points_Y (Patches)'', ''0'', ''Points_Z (Patches)'', ''0'', ''Points_Magnitude (Patches)'', ''0'', ''k (airfoil)'', ''0'', ''nut (airfoil)'', ''0'', ''omega (airfoil)'', ''0'', ''p (airfoil)'', ''0'', ''U_X (airfoil)'', ''0'', ''U_Y (airfoil)'', ''0'', ''U_Z (airfoil)'', ''0'', ''U_Magnitude (airfoil)'', ''0'', ''Points_X (airfoil)'', ''0'', ''Points_Y (airfoil)'', ''0'', ''Points_Z (airfoil)'', ''0'', ''Points_Magnitude (airfoil)'', ''0''] \r');  
fprintf(fid,' \r');  
fprintf(fid,'# update the view to ensure updated data information \r');  
fprintf(fid,'renderView1.Update() \r');  
fprintf(fid,' \r');  
fprintf(fid,'# update the view to ensure updated data information \r');  
fprintf(fid,'lineChartView1.Update() \r');  
fprintf(fid,' \r');  
fprintf(fid,'# Properties modified on plotData1Display \r');  
fprintf(fid,'plotData1Display.UseIndexForXAxis = 0 \r');  
fprintf(fid,' \r');  
fprintf(fid,'# Properties modified on plotData1Display \r');  
fprintf(fid,'plotData1Display.XArrayName = ''Points_X'' \r');  
fprintf(fid,' \r');  
fprintf(fid,'# Properties modified on plotData1Display \r');  
fprintf(fid,'plotData1Display.SeriesVisibility = [''k (Patches)'', ''nut (Patches)'', ''omega (Patches)'', ''p (Patches)'', ''U_Magnitude (Patches)'', ''k (airfoil)'', ''nut (airfoil)'', ''p (airfoil)'', ''U_Magnitude (airfoil)''] \r');  
fprintf(fid,'plotData1Display.SeriesColor = [''k (Patches)'', ''0'', ''0'', ''0'', ''nut (Patches)'', ''0.889998'', ''0.100008'', ''0.110002'', ''omega (Patches)'', ''0.220005'', ''0.489998'', ''0.719997'', ''p (Patches)'', ''0.300008'', ''0.689998'', ''0.289998'', ''U_X (Patches)'', ''0.6'', ''0.310002'', ''0.639994'', ''U_Y (Patches)'', ''1'', ''0.500008'', ''0'', ''U_Z (Patches)'', ''0.650004'', ''0.340002'', ''0.160006'', ''U_Magnitude (Patches)'', ''0'', ''0'', ''0'', ''Points_X (Patches)'', ''0.889998'', ''0.100008'', ''0.110002'', ''Points_Y (Patches)'', ''0.220005'', ''0.489998'', ''0.719997'', ''Points_Z (Patches)'', ''0.300008'', ''0.689998'', ''0.289998'', ''Points_Magnitude (Patches)'', ''0.6'', ''0.310002'', ''0.639994'', ''k (airfoil)'', ''1'', ''0.500008'', ''0'', ''nut (airfoil)'', ''0.650004'', ''0.340002'', ''0.160006'', ''omega (airfoil)'', ''0'', ''0'', ''0'', ''p (airfoil)'', ''0.889998'', ''0.100008'', ''0.110002'', ''U_X (airfoil)'', ''0.220005'', ''0.489998'', ''0.719997'', ''U_Y (airfoil)'', ''0.300008'', ''0.689998'', ''0.289998'', ''U_Z (airfoil)'', ''0.6'', ''0.310002'', ''0.639994'', ''U_Magnitude (airfoil)'', ''1'', ''0.500008'', ''0'', ''Points_X (airfoil)'', ''0.650004'', ''0.340002'', ''0.160006'', ''Points_Y (airfoil)'', ''0'', ''0'', ''0'', ''Points_Z (airfoil)'', ''0.889998'', ''0.100008'', ''0.110002'', ''Points_Magnitude (airfoil)'', ''0.220005'', ''0.489998'', ''0.719997''] \r');  
fprintf(fid,'plotData1Display.SeriesPlotCorner = [''Points_Magnitude (Patches)'', ''0'', ''Points_Magnitude (airfoil)'', ''0'', ''Points_X (Patches)'', ''0'', ''Points_X (airfoil)'', ''0'', ''Points_Y (Patches)'', ''0'', ''Points_Y (airfoil)'', ''0'', ''Points_Z (Patches)'', ''0'', ''Points_Z (airfoil)'', ''0'', ''U_Magnitude (Patches)'', ''0'', ''U_Magnitude (airfoil)'', ''0'', ''U_X (Patches)'', ''0'', ''U_X (airfoil)'', ''0'', ''U_Y (Patches)'', ''0'', ''U_Y (airfoil)'', ''0'', ''U_Z (Patches)'', ''0'', ''U_Z (airfoil)'', ''0'', ''k (Patches)'', ''0'', ''k (airfoil)'', ''0'', ''nut (Patches)'', ''0'', ''nut (airfoil)'', ''0'', ''omega (Patches)'', ''0'', ''omega (airfoil)'', ''0'', ''p (Patches)'', ''0'', ''p (airfoil)'', ''0''] \r');  
fprintf(fid,'plotData1Display.SeriesLineStyle = [''Points_Magnitude (Patches)'', ''1'', ''Points_Magnitude (airfoil)'', ''1'', ''Points_X (Patches)'', ''1'', ''Points_X (airfoil)'', ''1'', ''Points_Y (Patches)'', ''1'', ''Points_Y (airfoil)'', ''1'', ''Points_Z (Patches)'', ''1'', ''Points_Z (airfoil)'', ''1'', ''U_Magnitude (Patches)'', ''1'', ''U_Magnitude (airfoil)'', ''1'', ''U_X (Patches)'', ''1'', ''U_X (airfoil)'', ''1'', ''U_Y (Patches)'', ''1'', ''U_Y (airfoil)'', ''1'', ''U_Z (Patches)'', ''1'', ''U_Z (airfoil)'', ''1'', ''k (Patches)'', ''1'', ''k (airfoil)'', ''1'', ''nut (Patches)'', ''1'', ''nut (airfoil)'', ''1'', ''omega (Patches)'', ''1'', ''omega (airfoil)'', ''1'', ''p (Patches)'', ''1'', ''p (airfoil)'', ''1''] \r');  
fprintf(fid,'plotData1Display.SeriesLineThickness = [''Points_Magnitude (Patches)'', ''2'', ''Points_Magnitude (airfoil)'', ''2'', ''Points_X (Patches)'', ''2'', ''Points_X (airfoil)'', ''2'', ''Points_Y (Patches)'', ''2'', ''Points_Y (airfoil)'', ''2'', ''Points_Z (Patches)'', ''2'', ''Points_Z (airfoil)'', ''2'', ''U_Magnitude (Patches)'', ''2'', ''U_Magnitude (airfoil)'', ''2'', ''U_X (Patches)'', ''2'', ''U_X (airfoil)'', ''2'', ''U_Y (Patches)'', ''2'', ''U_Y (airfoil)'', ''2'', ''U_Z (Patches)'', ''2'', ''U_Z (airfoil)'', ''2'', ''k (Patches)'', ''2'', ''k (airfoil)'', ''2'', ''nut (Patches)'', ''2'', ''nut (airfoil)'', ''2'', ''omega (Patches)'', ''2'', ''omega (airfoil)'', ''2'', ''p (Patches)'', ''2'', ''p (airfoil)'', ''2''] \r');  
fprintf(fid,'plotData1Display.SeriesMarkerStyle = [''Points_Magnitude (Patches)'', ''0'', ''Points_Magnitude (airfoil)'', ''0'', ''Points_X (Patches)'', ''0'', ''Points_X (airfoil)'', ''0'', ''Points_Y (Patches)'', ''0'', ''Points_Y (airfoil)'', ''0'', ''Points_Z (Patches)'', ''0'', ''Points_Z (airfoil)'', ''0'', ''U_Magnitude (Patches)'', ''0'', ''U_Magnitude (airfoil)'', ''0'', ''U_X (Patches)'', ''0'', ''U_X (airfoil)'', ''0'', ''U_Y (Patches)'', ''0'', ''U_Y (airfoil)'', ''0'', ''U_Z (Patches)'', ''0'', ''U_Z (airfoil)'', ''0'', ''k (Patches)'', ''0'', ''k (airfoil)'', ''0'', ''nut (Patches)'', ''0'', ''nut (airfoil)'', ''0'', ''omega (Patches)'', ''0'', ''omega (airfoil)'', ''0'', ''p (Patches)'', ''0'', ''p (airfoil)'', ''0''] \r');  
fprintf(fid,' \r');  
fprintf(fid,'# Properties modified on plotData1Display \r');  
fprintf(fid,'plotData1Display.SeriesVisibility = [''k (Patches)'', ''nut (Patches)'', ''omega (Patches)'', ''p (Patches)'', ''U_Magnitude (Patches)'', ''k (airfoil)'', ''p (airfoil)'', ''U_Magnitude (airfoil)''] \r');  
fprintf(fid,' \r');  
fprintf(fid,'# Properties modified on plotData1Display \r');  
fprintf(fid,'plotData1Display.SeriesVisibility = [''k (Patches)'', ''nut (Patches)'', ''omega (Patches)'', ''p (Patches)'', ''U_Magnitude (Patches)'', ''p (airfoil)'', ''U_Magnitude (airfoil)''] \r');  
fprintf(fid,' \r');  
fprintf(fid,'# Properties modified on plotData1Display \r');  
fprintf(fid,'plotData1Display.SeriesVisibility = [''k (Patches)'', ''nut (Patches)'', ''omega (Patches)'', ''p (Patches)'', ''U_Magnitude (Patches)'', ''p (airfoil)''] \r');  
fprintf(fid,' \r');  
fprintf(fid,'# Properties modified on lineChartView1 \r');  
fprintf(fid,'lineChartView1.SortByXAxis = 1 \r');  
fprintf(fid,' \r');  
fprintf(fid,'# save data \r');  
fprintf(fid,'SaveData(''%s'', proxy=plotData1, Precision=5, \r',TO_BE_SAVE);  
fprintf(fid,'    UseScientificNotation=0, \r');  
fprintf(fid,'    WriteAllTimeSteps=0, \r');  
fprintf(fid,'    FieldAssociation=''Points'') \r');  
fprintf(fid,' \r');  
fprintf(fid,'#### saving camera placements for all active views \r');  
fprintf(fid,' \r');  
fprintf(fid,'# current camera placement for renderView1 \r');  
fprintf(fid,'renderView1.CameraPosition = [0.37698453664779663, -1.6061188244789415, -0.03879009932279587] \r');  
fprintf(fid,'renderView1.CameraFocalPoint = [0.37698453664779663, -0.009999990463256836, -0.03879009932279587] \r');  
fprintf(fid,'renderView1.CameraViewUp = [0.0, 0.0, 1.0] \r');  
fprintf(fid,'renderView1.CameraParallelScale = 0.8855292971021455 \r');  
fprintf(fid,' \r');  
fprintf(fid,'#### uncomment the following to render all views \r');  
fprintf(fid,'# RenderAllViews() \r');  
fprintf(fid,'# alternatively, if you want to write images, you can use SaveScreenshot(...). \r');  
fprintf(fid,' \r');  


fclose all;

done = 1;
